=begin
#Compute Api

#Compute Api

The version of the OpenAPI document: 1.0
Contact: support@dbosoft.eu
Generated by: https://openapi-generator.tech
Generator version: 7.14.0

=end

require 'spec_helper'
require 'json'

# Unit tests for ComputeClient::GenesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'GenesApi' do
  before do
    # run before each test
    @api_instance = ComputeClient::GenesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GenesApi' do
    it 'should create an instance of GenesApi' do
      expect(@api_instance).to be_instance_of(ComputeClient::GenesApi)
    end
  end

  # unit tests for genes_cleanup
  # Remove all unused genes
  # Remove all unused genes from the local gene pool
  # @param [Hash] opts the optional parameters
  # @return [Operation]
  describe 'genes_cleanup test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for genes_delete
  # Remove a gene
  # Remove a gene from the local gene pool
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Operation]
  describe 'genes_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for genes_get
  # Get a gene
  # Get a gene
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [GeneWithUsage]
  describe 'genes_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for genes_list
  # List all genes
  # List all genes
  # @param [Hash] opts the optional parameters
  # @return [GeneList]
  describe 'genes_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
